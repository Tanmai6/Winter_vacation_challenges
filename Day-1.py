from Crypto.Util.number import bytes_to_long, long_to_bytes


def hex_to_bytes(hexa):

    # Convert the integer to its byte representation
    byte_data = hexa.to_bytes((hexa.bit_length() + 7) // 8, byteorder='big')

    return byte_data


def euler_totient(p, q, r, s):
    result = (p-1)*(q-1)*(r-1)*(s-1)
    return result


def private_key(e, e1):
    result = pow(e, -1, e1)
    return result


def rsa_decipher(cipher_text, private_key, n):
    result = pow(cipher_text, private_key, n)
    return result


p = 9352496155192295944243473644483853835662636576410969996619180877861158926367873785037099054018741236476166923118647057249968914650337399039210616026612969
q = 2*p + 1
r = 2*q + 1
s = 2*r + 1
N = 489654925303072532553659432557377999607856370197579144782976005904927235244321459117898721690940319487769632950077647476152880207627385231603017537961906244964117707813500615680799967895028255666319186794462243666159201392490299439947399915406223652423977002396844720487588735149486903743362109592536081726574342051928022071576485169655694281378301551060632699138055044915993078059902577590451519251321215765308977494770310317350866241246677761542212605478044672014913289740381478940929584556588858045439572693806615268502627912952686133840081188641597461343817750411035667135310831687533531094008308185320371643348451
CT = 432715065592606634089861355228594175287120418667778575153819827844280050034817091727234654441753505421109892187199619851467036141843219225576548066458971868485882675726231037523759446390320617220875223654779844199000263768842268250280724900232660554087335747248585852516178650721548390521811061514344194162686255217961234366696106221060102353144026860938238655857430940306226693299958671902478497567555157215330964237525014234673413040189714587538467099895070258506721111241107253424666385722319530209950633329606716946560606809110858219222790942374005215103853503885797916805177205972574547652232625745456780692745394
e = 0x10001

e = bytes_to_long(hex_to_bytes(e))
e1 = euler_totient(p, q, r, s)
private_key1 = private_key(e, e1)
plain_text = rsa_decipher(CT, private_key1, N)

print(long_to_bytes(plain_text))